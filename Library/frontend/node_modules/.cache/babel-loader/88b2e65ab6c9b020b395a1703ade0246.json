{"ast":null,"code":"import _slicedToArray from \"/home/yoosuf/yoosuf/my_projects/ag_hedge_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/yoosuf/yoosuf/my_projects/ag_hedge_project/frontend/src/components/Login.tsx\";\n// import { useState } from \"react\";\n\n// function Login({ setIsLoggedIn }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   async function handleSubmit(event) {\n//     event.preventDefault();\n//     const response = await fetch(\"http://localhost:4000/api/v1/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         username,\n//         password\n//       })\n//     });\n//     const data = await response.json();\n//     if (data.success) {\n//       setIsLoggedIn(true);\n//       history.push(\"/books\");\n//     } else {\n//       alert(\"Invalid username or password\");\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h1>Login</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Username:\n//           <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n//         </label>\n//         <br />\n//         <label>\n//           Password:\n//           <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport { useState } from \"react\";\nfunction Login(_ref) {\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n  console.log(\"login\");\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    // your login logic here\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n}\nexport default Login;","map":{"version":3,"names":["useState","Login","_ref","setIsLoggedIn","console","log","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","React","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick"],"sources":["/home/yoosuf/yoosuf/my_projects/ag_hedge_project/frontend/src/components/Login.tsx"],"sourcesContent":["// import { useState } from \"react\";\n\n// function Login({ setIsLoggedIn }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   async function handleSubmit(event) {\n//     event.preventDefault();\n//     const response = await fetch(\"http://localhost:4000/api/v1/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         username,\n//         password\n//       })\n//     });\n//     const data = await response.json();\n//     if (data.success) {\n//       setIsLoggedIn(true);\n//       history.push(\"/books\");\n//     } else {\n//       alert(\"Invalid username or password\");\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h1>Login</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Username:\n//           <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n//         </label>\n//         <br />\n//         <label>\n//           Password:\n//           <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n\nimport { useState } from \"react\";\n\ninterface LoginProps {\n  setIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction Login({ setIsLoggedIn }: LoginProps) {\n  console.log(\"login\")\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    // your login logic here\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,QAAQ,OAAO;AAMhC,SAASC,KAAKA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,aAAa,GAAAD,IAAA,CAAbC,aAAa;EAC5BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAAA,IAAAC,SAAA,GACYN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACIX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB;IACAZ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEa,KAAA,CAAAC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEP,KAAA,CAAAC,aAAA;IACEO,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAEjB,QAAS;IAChBkB,QAAQ,EAAE,SAAAA,SAACC,CAAC;MAAA,OAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAA,CAAC;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9C,CAAC,eACFP,KAAA,CAAAC,aAAA;IACEO,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAEb,QAAS;IAChBc,QAAQ,EAAE,SAAAA,SAACC,CAAC;MAAA,OAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAA,CAAC;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9C,CAAC,eACFP,KAAA,CAAAC,aAAA;IAAQa,OAAO,EAAEf,WAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CACxC,CAAC;AAEV;AAEA,eAAetB,KAAK"},"metadata":{},"sourceType":"module"}